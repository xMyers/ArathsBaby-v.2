@page "/Users/login"

@layout LoginLayout 
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider auth
@inject HttpClient Http

    @*<div style="display:grid;justify-items:center;align-items:center;min-height:100vh; position:center">
        <div class="col-md-6">
            <EditForm Model="@userInfo" OnValidSubmit="@ValidateUser">
                <ValidationSummary/>
                <div class="text-center">
                    <img src=""
                         alt="Alternate Text" style="height:250px;width:250px" />
                </div>
                <div>
                    <h3 style="font-weight:bold; color:purple" class="text-center">ArathsBaby Login</h3>
                </div>
                <div>
                    <br />
                </div>
                <div class="col-12 row">
                    <label for="CategoryName">Email</label>
                    <input class="form-control col-12" @bind="userInfo.Email" />
                </div>
                <br />
                <div class="col-12 row">
                    <label for="CategoryName">Contraseña</label>
                    <input type="password" class="form-control col-12" @bind="userInfo.Password" />
                </div>
                <br />
                <div class="col-10 row">
                    <span class="col-12"></span>
                    <button type="submit" class="form-control col-6 btn btn-primary">Login</button>
                    <a href="/Users/register" class="col-3">Sign up</a>
                </div>
                <br />
                <div class="col-12 row" style="text-align:left; font-weight:bold">
                    <span class="col-12">@LoginMesssage</span>
                </div>
                <DataAnnotationsValidator/>
            </EditForm>
        </div>
    </div>*@

    <div class="container login-container">
        <div class="row">
            <div class="col-md-6 login-form-2">
                <div class="cont-img">
                    <img src="https://scontent.fntr8-1.fna.fbcdn.net/v/t1.15752-9/90356610_567561814108214_1815008271111553024_n.png?_nc_cat=110&_nc_sid=b96e70&_nc_ohc=s_KKBjqO5BcAX87VT27&_nc_ht=scontent.fntr8-1.fna&oh=a09b4743a86553cc5867ed6fa2b45281&oe=5F5C67C3"
                         alt="Alternate Text" style="height:500px;width:500px; margin-left: 86px;" />
                </div>
            </div>
            <div class="col-md-6 login-form-1">
                <div>
                    <h3 style="font-weight:bold; color:#ea899a; font-size:40px" class="text-center">Inicia Sesión</h3>
                </div>
                <EditForm Model="@userInfo" OnValidSubmit="@ValidateUser">
                    <div class="form-group">
                        <label for="CategoryName">Email</label>
                        <input class="form-control col-12" @bind="userInfo.Email" />
                    </div>
                    <div class="form-group">
                        <label for="CategoryName">Contraseña</label>
                        <input type="password" class="form-control col-12" @bind="userInfo.Password" />
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btnSubmit">Login</button>
                        <a href="/Users/register" class="col-3">Sign up</a>
                    </div>
                    <div class="col-12 row" style="text-align:left; font-weight:bold">
                        <span class="col-12">@LoginMesssage</span>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>


@code {

    public UserInfo userInfo = new UserInfo();
    private const string baseUrl = "https://localhost:44348/";

    public string LoginMesssage { get; set; }

    private async Task ValidateUser()
    {

        var rpta = await Http.PostJsonAsync<int>($"{baseUrl}api/Account", userInfo);

        if (rpta != 0)
        {
            ((CustomAuthenticationStateProvider)auth).UserLogin(rpta.ToString());
            NavigationManager.NavigateTo("catalog");
        }
        else
        {
            LoginMesssage = "Correo o contraseña incorrectos";
        }
        await Task.FromResult(true);

    }

}
